<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.tech</groupId>
    <artifactId>WebIndex</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>WebIndex</name>

    <properties>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- 
            Copy from example
        -->
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>

        <!-- The standardized API -->
        <hibernate.jpa21.api.version>1.0.0.Final</hibernate.jpa21.api.version>

        <!-- Hibernate's implementation -->
        <hibernate.version>5.0.1.Final</hibernate.version>

        <!-- The standardized Bean Validation API -->
        <validation.api.version>1.1.0.Final</validation.api.version>

        <!-- Hibernate's implementation -->
        <hibernate.validator.version>5.2.1.Final</hibernate.validator.version>
        <javax-el.version>3.0.1-b04</javax-el.version>

        <!-- Everyone's favorite -->
        <slf4j.impl.version>1.6.1</slf4j.impl.version>

        <!-- For small scale deployment, use the H2 RDBMS, all Java -->
        <h2.version>1.3.171</h2.version>

        <!-- In Java SE you should use a JTA transaction manager as a JDBC connection pool, Bitronix is good -->
        <btm.version>2.1.3</btm.version>

        <!-- Integration testing with TestNG is easier than JUnit -->
        <testng.version>6.8.7</testng.version>

        <!-- Java EE 7 API for the application examples -->
        <javaee-api.version>7.0</javaee-api.version>

        <!-- Application examples integration testing with Java EE environment -->
        <shrinkwrap.version>2.0.2</shrinkwrap.version>
        <arquillian.version>1.0.4.Final</arquillian.version>
        <arquillian.extension.persistence.version>1.0.0.Alpha6</arquillian.extension.persistence.version>
        <arquillian.extension.rest.version>1.0.0.Alpha3</arquillian.extension.rest.version>
        <dbunit.version>2.4.9</dbunit.version>
        <wildfly.version>8.1.0.Final</wildfly.version>

        <!-- Wildfly server deployment plugin for the application examples -->
        <wildfly.maven-plugin.version>1.0.2.Final</wildfly.maven-plugin.version>
        
        <!-- 
            Copy from example finished
        -->
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>5.2.12.Final</version>
        </dependency>
        
        <!-- For environment project start -->
        <!--<dependency>
            <groupId>org.jpwh</groupId>
            <artifactId>shared</artifactId>
            <version>${project.version}</version>
        </dependency> -->

        <!-- Everything is tested with TestNG, avoid JUnit for integration tests! -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <exclusions>
                <!-- No thank you -->
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Logging, everyone's favorite -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${slf4j.impl.version}</version>
        </dependency>
        
        <!--
        In this environment, use a JTA-compatible resource/transaction manager instead of
        a simple dumb JDBC connection pool. Bitronix is good: http://btm.codehaus.org/
         -->
        <dependency>
            <groupId>org.codehaus.btm</groupId>
            <artifactId>btm</artifactId>
            <version>${btm.version}</version>
        </dependency>

        <!-- Java Persistence API and implementation -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <!-- For JDK 8 support
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-java8</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        -->

        <!-- Bean Validation API and implementation -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.validator.version}</version>
        </dependency>
        <!-- This needs EL -->
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>${javax-el.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.el</artifactId>
            <version>${javax-el.version}</version>
        </dependency>

        <!-- Envers for temporal data -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-envers</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <!-- EHCache for second-level caching -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <!-- H2 rocks for small-scale deployment -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
        </dependency>

        <!-- Some stored procedure testing requires MySQL -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.25</version>
        </dependency>

        <!-- Stored procedures returning REF_CURSOR on PostgreSQL -->
        <dependency>
        	<groupId>postgresql</groupId>
        	<artifactId>postgresql</artifactId>
        	<version>8.4-702.jdbc4</version>
        </dependency>

        <!-- The tests should run on Oracle, you need to install the JDBC driver locally
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc</artifactId>
            <version>12cR1</version>
            <scope>system</scope>
            <systemPath>/Users/cb/work/oracle/ojdbc6.jar</systemPath>
        </dependency>
        -->
        
         <!-- For environment project finish -->
         
         <!-- Example porm -->
         
        
        <!-- Example porm finish -->
         
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <compilerArguments>
                        <endorseddirs>${endorsed.dir}</endorseddirs>
                    </compilerArguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${endorsed.dir}</outputDirectory>
                            <silent>true</silent>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>javax</groupId>
                                    <artifactId>javaee-endorsed-api</artifactId>
                                    <version>7.0</version>
                                    <type>jar</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
